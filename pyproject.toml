[tool.poetry]
name = "flagsmith_common"
version = "1.5.0"
description = "A repository for including code that is required in multiple flagsmith repositories"
authors = ["Matthew Elwell <matthew.elwell@flagsmith.com>"]
readme = "README.md"
packages = [{ include = "common", from = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
django = "<5.0.0"
djangorestframework = "*"
drf-writable-nested = "*"
flagsmith-flag-engine = "*"
djangorestframework-recursive = "*"
django-health-check = "^3.18.3"

[tool.poetry.group.dev.dependencies]
pre-commit = "*"
ruff = "*"
pytest = "^8.3.4"
pyfakefs = "^5.7.4"
pytest-django = "^4.10.0"
mypy = "^1.15.0"
django-stubs = "^5.1.3"
djangorestframework-stubs = "^3.15.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = ['--ds=settings.dev', '-vvvv', '-p', 'no:warnings']
console_output_style = 'count'

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py311"
extend-exclude = ["migrations"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
# Establish parity with flake8 + isort
select = ["C901", "E4", "E7", "E9", "F", "I", "W"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.mypy]
plugins = ["mypy_django_plugin.main"]
strict = true

[tool.django-stubs]
django_settings_module = "settings.dev"

[tool.drf-stubs]
enabled = true
